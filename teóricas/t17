	Collections com s. É uma classe. 

		tem um método sort: Collections.sort(List<>) que ordena com a ordenação natural. Isto acontece quando concretiza a interface Comparable<> {p int compare (T obj)}
	
	Quando os elementos não concretizam o método de comparação, fazemos:

		-Collections.sort(List<> c, comparator);

	A interface List tem um método sort:

		sort(comparator). Se comparator for null faz ordem natural, se não usa comparator.



PADRÕES DE DESENHO

	Objetivo é melhorar o desenho da aplicação.

	apresenta uma solução generica para um problema recorrente que esta sempre a acontecer.

	Têm varias secções. 
	
		1ª - objetivo do desenho

		2ª - estrutura da solução

		3ª - consequences (o que se ganha e o que se perde ao usa-lo)
	
	O seu nome é importante. 	

		Deve ser o mais curto possível, mas descrevendo o padrão.



EX:

	SINGLETON
	
		objetivo:
			
			fornecer/garantir que uma classe tem uma única instancia e todos clientes dessa classe so conseguem aceder a essa instancia.

			usamos em casos em que so faz sentido ter uma única instancia dessa classe.

Public class Singleton{
	
}
	


















		